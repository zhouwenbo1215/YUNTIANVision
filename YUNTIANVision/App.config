<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />
  </startup>
  <!--类库-->
  <log4net>
    <!--类：名字叫ErrorLog    证明这个类要用来记录错误信息-->

    <logger name="ErrorLog">
      <level value="ALL"/>
      <appender-ref ref="AppenderError"/>
    </logger>
    <!--类：名字叫InforLog    证明这个类要用来记录普通信息-->
    <logger name="InforLog">
      <level value="ALL" />
      <appender-ref ref="AppenderInfor" />
    </logger>
    <!--提供记录错误信息的类中对错误信息的记录方式,记录方式是将信息日志写进一个文件中-->
    <!--
    <appender name="AppenderError" type="log4net.Appender.RollingFileAppender">
      -->
    <!--设置文件存储的位置-->
    <!--
      <param  name="File" value="Log\\Error\\"/>
      <param name="MaxSizeRollBackups" value="100" />
      -->
    <!--是否追加到文件-->
    <!--
      <param name="AppendToFile" value="true"/>
      -->
    <!--当个日志文件的最大大小-->
    <!--
      <param name="MaxFileSize" value="1024" />
      -->
    <!--是否使用静态文件名-->
    <!--
      <param name="StaticLogFileName" value="false" />
      -->
    <!--日志文件名-->
    <!--
      <param name="DatePattern" value="yyyyMMdd&quot;.txt&quot;" />
      -->
    <!--文件创建的方式，这里是以Date方式创建  size  Composite-->
    <!--
      <param name="RollingStyle" value="Date" />
      -->
    <!--记录日志信息的格式-->
    <!--
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%n异常时间：%d %n异常级别：%-5p%n异常内容：%m%n" />
      </layout>
    </appender>-->
	<appender name="AppenderError" type="log4net.Appender.RollingFileAppender">
      <param name="File" value="Log\\LogError\\" />
      <param name="AppendToFile" value="true" />
      <param name="MaxSizeRollBackups" value="100" />
      <param name="MaxFileSize" value="10240" />
      <param name="StaticLogFileName" value="false" />
      <param name="DatePattern" value="yyyyMMdd&quot;.txt&quot;" />
      <param name="RollingStyle" value="Date" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%n异常时间：%d %n异常级别：%-5p%n异常内容：%m%n" />
      </layout>      <!--&lt; &gt; = <> %n = 回车-->
    </appender>
    <appender name="AppenderInfor" type="log4net.Appender.RollingFileAppender">
      <!--设置文件存储的位置-->
      <param name="File" value="Log\\Infor\\" />
      <param name="MaxSizeRollBackups" value="100" />
      <!--是否追加到文件-->
      <param name="AppendToFile" value="true" />
      <!--当个日志文件的最大大小-->
      <param name="MaxFileSize" value="1024" />
      <!--是否使用静态文件名-->
      <param name="StaticLogFileName" value="false" />
      <!--日志文件名-->
      <param name="DatePattern" value="yyyyMMdd&quot;.txt&quot;" />
      <!--文件创建的方式，这里是以Date方式创建  size  Composite-->
      <param name="RollingStyle" value="Date" />
      <!--记录日志信息的格式-->
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="日志时间：%d %n日志内容：%m%n%n" />
      </layout>
    </appender>
	<root>
		<level value="INFO" />
		<appender-ref ref="AsyncAppender" />
	</root>
	<root>
		<level value="Error" />
		<appender-ref ref="AsyncAppender" />
	</root>
  </log4net>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-13.0.0.0" newVersion="13.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <entityFramework>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
      <provider invariantName="System.Data.SQLite.EF6" type="System.Data.SQLite.EF6.SQLiteProviderServices, System.Data.SQLite.EF6" />
    </providers>
  </entityFramework>
  <system.data>
    <DbProviderFactories>
      <remove invariant="System.Data.SQLite.EF6" />
      <add name="SQLite Data Provider (Entity Framework 6)" invariant="System.Data.SQLite.EF6" description=".NET Framework Data Provider for SQLite (Entity Framework 6)" type="System.Data.SQLite.EF6.SQLiteProviderFactory, System.Data.SQLite.EF6" />
    <remove invariant="System.Data.SQLite" /><add name="SQLite Data Provider" invariant="System.Data.SQLite" description=".NET Framework Data Provider for SQLite" type="System.Data.SQLite.SQLiteFactory, System.Data.SQLite" /></DbProviderFactories>
  </system.data>
</configuration>
